{
  "openapi": "3.1.0",
  "info": {
    "title": "College Management System",
    "version": "0.1.0"
  },
  "paths": {
    "/user/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "operationId": "create_user_user__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              }
            }
          },
          "409": {
            "description": "User with the given detail already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAlreadyExistsExceptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get All Users",
        "operationId": "get_all_users_user__get",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User By Id",
        "operationId": "get_user_by_id_user__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms__users__models__User"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms__users__models__UserNotFoundExceptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "operationId": "delete_user_user__user_id__delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "204": {
            "description": "User deleted successfully."
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms__users__models__UserNotFoundExceptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/by_email/{email_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User By Email Id",
        "operationId": "get_user_by_email_id_user_by_email__email_id__get",
        "parameters": [
          {
            "name": "email_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "title": "Email Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully by email.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms__users__models__User"
                }
              }
            }
          },
          "404": {
            "description": "User not found by email.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms__users__models__UserNotFoundExceptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordIncorrectExceptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms__users__models__UserNotFoundExceptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question/": {
      "post": {
        "tags": [
          "questions"
        ],
        "summary": "Create Question",
        "operationId": "create_question_question__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Question created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateQuestionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "questions"
        ],
        "summary": "Get All Questions",
        "operationId": "get_all_questions_question__get",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of questions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListQuestionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question/{question_id}": {
      "get": {
        "tags": [
          "questions"
        ],
        "summary": "Get Question By Id",
        "operationId": "get_question_by_id_question__question_id__get",
        "parameters": [
          {
            "name": "question_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Question Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Question details retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          },
          "404": {
            "description": "Question not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms__questions__models__UserNotFoundExceptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "questions"
        ],
        "summary": "Delete Question",
        "operationId": "delete_question_question__question_id__delete",
        "parameters": [
          {
            "name": "question_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Question Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "204": {
            "description": "Question deleted successfully."
          },
          "404": {
            "description": "Question not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms__questions__models__UserNotFoundExceptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question/search/{search_term}": {
      "get": {
        "tags": [
          "questions"
        ],
        "summary": "Search Questions By Title",
        "operationId": "search_questions_by_title_question_search__search_term__get",
        "parameters": [
          {
            "name": "search_term",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Search Term"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of questions matching search term",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListQuestionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question/tag/{tag}": {
      "get": {
        "tags": [
          "questions"
        ],
        "summary": "Get Questions By Tag",
        "operationId": "get_questions_by_tag_question_tag__tag__get",
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tag"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of questions with specified tag",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListQuestionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/answer/": {
      "post": {
        "tags": [
          "answers"
        ],
        "summary": "Create Answer",
        "operationId": "create_answer_answer__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAnswerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Answer created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAnswerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/answer/{answer_id}": {
      "get": {
        "tags": [
          "answers"
        ],
        "summary": "Get Answer By Id",
        "operationId": "get_answer_by_id_answer__answer_id__get",
        "parameters": [
          {
            "name": "answer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Answer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Answer details retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Answer"
                }
              }
            }
          },
          "404": {
            "description": "Answer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerNotFoundExceptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "answers"
        ],
        "summary": "Delete Answer",
        "operationId": "delete_answer_answer__answer_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "answer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Answer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "204": {
            "description": "Answer deleted successfully."
          },
          "404": {
            "description": "Answer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerNotFoundExceptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/answer/question/{question_id}": {
      "get": {
        "tags": [
          "answers"
        ],
        "summary": "Get Answers By Question Id",
        "operationId": "get_answers_by_question_id_answer_question__question_id__get",
        "parameters": [
          {
            "name": "question_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Question Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of answers for question",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAnswerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/answer/{answer_id}/accept": {
      "put": {
        "tags": [
          "answers"
        ],
        "summary": "Accept Answer",
        "operationId": "accept_answer_answer__answer_id__accept_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "answer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Answer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "204": {
            "description": "Answer accepted successfully."
          },
          "404": {
            "description": "Answer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerNotFoundExceptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/answer/{answer_id}/vote": {
      "post": {
        "tags": [
          "answers"
        ],
        "summary": "Add Vote",
        "operationId": "add_vote_answer__answer_id__vote_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "answer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Answer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "201": {
            "description": "Vote added successfully."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "answers"
        ],
        "summary": "Remove Vote",
        "operationId": "remove_vote_answer__answer_id__vote_delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "answer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Answer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "204": {
            "description": "Vote removed successfully."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Answer": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "question_id": {
            "type": "string",
            "format": "uuid",
            "title": "Question Id"
          },
          "author_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Id"
          },
          "author_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Name"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "votes": {
            "type": "integer",
            "title": "Votes",
            "default": 0
          },
          "is_accepted": {
            "type": "boolean",
            "title": "Is Accepted",
            "default": false
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "question_id",
          "content",
          "created_at"
        ],
        "title": "Answer"
      },
      "AnswerNotFoundExceptionResponse": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug",
            "default": "asnwer_not_found"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": "The requested user does not exist."
          },
          "context": {
            "additionalProperties": true,
            "type": "object",
            "title": "Context"
          }
        },
        "type": "object",
        "required": [
          "context"
        ],
        "title": "AnswerNotFoundExceptionResponse"
      },
      "CreateAnswerRequest": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "question_id": {
            "type": "string",
            "format": "uuid",
            "title": "Question Id"
          }
        },
        "type": "object",
        "required": [
          "content",
          "question_id"
        ],
        "title": "CreateAnswerRequest"
      },
      "CreateAnswerResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "CreateAnswerResponseModel"
      },
      "CreateQuestionRequest": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 128,
            "title": "Title",
            "description": "Title of the question"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Content of the question"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Tags associated with the question"
          },
          "is_answered": {
            "type": "boolean",
            "title": "Is Answered",
            "description": "Whether the question has been answered",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "title",
          "content"
        ],
        "title": "CreateQuestionRequest"
      },
      "CreateQuestionResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "CreateQuestionResponse"
      },
      "CreateUserRequest": {
        "properties": {
          "email_id": {
            "type": "string",
            "maxLength": 64,
            "format": "email",
            "title": "Email Id"
          },
          "username": {
            "type": "string",
            "maxLength": 32,
            "title": "Username"
          },
          "password": {
            "type": "string",
            "maxLength": 32,
            "minLength": 8,
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email_id",
          "username",
          "password"
        ],
        "title": "CreateUserRequest"
      },
      "CreateUserResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "CreateUserResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ListAnswerResponseModel": {
        "properties": {
          "answers": {
            "items": {
              "$ref": "#/components/schemas/Answer"
            },
            "type": "array",
            "title": "Answers"
          }
        },
        "type": "object",
        "required": [
          "answers"
        ],
        "title": "ListAnswerResponseModel"
      },
      "ListQuestionResponse": {
        "properties": {
          "questions": {
            "items": {
              "$ref": "#/components/schemas/Question"
            },
            "type": "array",
            "title": "Questions",
            "description": "List of questions"
          }
        },
        "type": "object",
        "required": [
          "questions"
        ],
        "title": "ListQuestionResponse"
      },
      "ListUserResponse": {
        "properties": {
          "users": {
            "items": {
              "$ref": "#/components/schemas/cms__users__models__User"
            },
            "type": "array",
            "title": "Users",
            "description": "List of users"
          }
        },
        "type": "object",
        "required": [
          "users"
        ],
        "title": "ListUserResponse"
      },
      "LoginRequest": {
        "properties": {
          "email_id": {
            "type": "string",
            "maxLength": 64,
            "format": "email",
            "title": "Email Id",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "maxLength": 32,
            "minLength": 8,
            "title": "Password",
            "description": "User password"
          }
        },
        "type": "object",
        "required": [
          "email_id",
          "password"
        ],
        "title": "LoginRequest"
      },
      "LoginResponse": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token",
            "description": "Authentication token"
          },
          "user": {
            "$ref": "#/components/schemas/cms__auth__models__LoginResponse__User",
            "description": "Authenticated user details"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At",
            "description": "Session expiration timestamp"
          }
        },
        "type": "object",
        "required": [
          "token",
          "user",
          "expires_at"
        ],
        "title": "LoginResponse"
      },
      "PasswordIncorrectExceptionResponse": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug",
            "default": "password_incorrect"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": "The password entered is incorrect"
          },
          "context": {
            "additionalProperties": true,
            "type": "object",
            "title": "Context"
          }
        },
        "type": "object",
        "required": [
          "context"
        ],
        "title": "PasswordIncorrectExceptionResponse"
      },
      "Question": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier for the question"
          },
          "title": {
            "type": "string",
            "maxLength": 128,
            "title": "Title",
            "description": "Title of the question"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Content of the question"
          },
          "author_id": {
            "type": "string",
            "title": "Author Id",
            "description": "ID of the user who created the question"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Tags associated with the question"
          },
          "is_answered": {
            "type": "boolean",
            "title": "Is Answered",
            "description": "Whether the question has been answered",
            "default": false
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "description": "Timestamp when the question was created"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "content",
          "author_id",
          "created_at"
        ],
        "title": "Question"
      },
      "UserAlreadyExistsExceptionResponse": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug",
            "default": "user_already_exists"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": "A user with the given parameter already exists."
          },
          "context": {
            "additionalProperties": true,
            "type": "object",
            "title": "Context"
          }
        },
        "type": "object",
        "required": [
          "context"
        ],
        "title": "UserAlreadyExistsExceptionResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "cms__auth__models__LoginResponse__User": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "User unique identifier"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "User"
      },
      "cms__questions__models__UserNotFoundExceptionResponse": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug",
            "default": "question_not_found"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": "The requested user does not exist."
          },
          "context": {
            "additionalProperties": true,
            "type": "object",
            "title": "Context"
          }
        },
        "type": "object",
        "required": [
          "context"
        ],
        "title": "UserNotFoundExceptionResponse"
      },
      "cms__users__models__User": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "username": {
            "type": "string",
            "maxLength": 32,
            "title": "Username"
          },
          "email_id": {
            "type": "string",
            "maxLength": 64,
            "format": "email",
            "title": "Email Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "username",
          "email_id"
        ],
        "title": "User"
      },
      "cms__users__models__UserNotFoundExceptionResponse": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug",
            "default": "user_not_found"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": "The requested user does not exist."
          },
          "context": {
            "additionalProperties": true,
            "type": "object",
            "title": "Context"
          }
        },
        "type": "object",
        "required": [
          "context"
        ],
        "title": "UserNotFoundExceptionResponse"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
